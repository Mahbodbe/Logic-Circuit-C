
AVRASM ver. 2.1.30  C:\Users\mrmah\Desktop\Second prom poorfard\Code\Debug\List\LCDwithbutton.asm Sun Mar 30 16:52:17 2025

C:\Users\mrmah\Desktop\Second prom poorfard\Code\Debug\List\LCDwithbutton.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\mrmah\Desktop\Second prom poorfard\Code\Debug\List\LCDwithbutton.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\mrmah\Desktop\Second prom poorfard\Code\Debug\List\LCDwithbutton.asm(1090): warning: Register r7 already defined by the .DEF directive
C:\Users\mrmah\Desktop\Second prom poorfard\Code\Debug\List\LCDwithbutton.asm(1091): warning: Register r6 already defined by the .DEF directive
C:\Users\mrmah\Desktop\Second prom poorfard\Code\Debug\List\LCDwithbutton.asm(1092): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _x=R4
                 	.DEF _x_msb=R5
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6156
000034 756c
000035 3d65
000036 6425      	.DB  0x56,0x61,0x6C,0x75,0x65,0x3D,0x25,0x64
C:\Users\mrmah\Desktop\Second prom poorfard\Code\Debug\List\LCDwithbutton.asm(1131): warning: .cseg .db misalignment - padding zero byte
000037 0000      	.DB  0x0
                 _0x2020003:
000038 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000039 0002      	.DW  0x02
00003a 0271      	.DW  __base_y_G101
00003b 0070      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
00003c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003d 94f8      	CLI
00003e 27ee      	CLR  R30
00003f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000040 e0f1      	LDI  R31,1
000041 bffb      	OUT  GICR,R31
000042 bfeb      	OUT  GICR,R30
000043 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000044 e08d      	LDI  R24,(14-2)+1
000045 e0a2      	LDI  R26,2
000046 27bb      	CLR  R27
                 __CLEAR_REG:
000047 93ed      	ST   X+,R30
000048 958a      	DEC  R24
000049 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004d 93ed      	ST   X+,R30
00004e 9701      	SBIW R24,1
00004f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000050 e7e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000051 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000052 9185      	LPM  R24,Z+
000053 9195      	LPM  R25,Z+
000054 9700      	SBIW R24,0
000055 f061      	BREQ __GLOBAL_INI_END
000056 91a5      	LPM  R26,Z+
000057 91b5      	LPM  R27,Z+
000058 9005      	LPM  R0,Z+
000059 9015      	LPM  R1,Z+
00005a 01bf      	MOVW R22,R30
00005b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005c 9005      	LPM  R0,Z+
00005d 920d      	ST   X+,R0
00005e 9701      	SBIW R24,1
00005f f7e1      	BRNE __GLOBAL_INI_LOOP
000060 01fb      	MOVW R30,R22
000061 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000062 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000063 bfed      	OUT  SPL,R30
000064 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000065 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000066 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000067 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000068 940c 006a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <alcd.h>
                 ;
                 ;// Declare your global variables here
                 ;unsigned char str[17];
                 ;int x;
                 ;
                 ;void main(void)
                 ; 0000 000B {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000C // Declare your local variables here
                 ; 0000 000D 
                 ; 0000 000E // Input/Output Ports initialization
                 ; 0000 000F // Port A initialization
                 ; 0000 0010 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0011 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
00006a e0e0      	LDI  R30,LOW(0)
00006b bbea      	OUT  0x1A,R30
                 ; 0000 0012 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0013 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
00006c bbeb      	OUT  0x1B,R30
                 ; 0000 0014 
                 ; 0000 0015 // Port B initialization
                 ; 0000 0016 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=Out
                 ; 0000 0017 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00006d bbe7      	OUT  0x17,R30
                 ; 0000 0018 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0019 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (1<<PORTB0);
00006e e0e1      	LDI  R30,LOW(1)
00006f bbe8      	OUT  0x18,R30
                 ; 0000 001A 
                 ; 0000 001B // Port C initialization
                 ; 0000 001C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 001D DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000070 e0e0      	LDI  R30,LOW(0)
000071 bbe4      	OUT  0x14,R30
                 ; 0000 001E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 001F PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000072 bbe5      	OUT  0x15,R30
                 ; 0000 0020 
                 ; 0000 0021 // Port D initialization
                 ; 0000 0022 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0023 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000073 bbe1      	OUT  0x11,R30
                 ; 0000 0024 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0025 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000074 bbe2      	OUT  0x12,R30
                 ; 0000 0026 
                 ; 0000 0027 // Timer/Counter 0 initialization
                 ; 0000 0028 // Clock source: System Clock
                 ; 0000 0029 // Clock value: Timer 0 Stopped
                 ; 0000 002A // Mode: Normal top=0xFF
                 ; 0000 002B // OC0 output: Disconnected
                 ; 0000 002C TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000075 bfe3      	OUT  0x33,R30
                 ; 0000 002D TCNT0=0x00;
000076 bfe2      	OUT  0x32,R30
                 ; 0000 002E OCR0=0x00;
000077 bfec      	OUT  0x3C,R30
                 ; 0000 002F 
                 ; 0000 0030 // Timer/Counter 1 initialization
                 ; 0000 0031 // Clock source: System Clock
                 ; 0000 0032 // Clock value: Timer1 Stopped
                 ; 0000 0033 // Mode: Normal top=0xFFFF
                 ; 0000 0034 // OC1A output: Disconnected
                 ; 0000 0035 // OC1B output: Disconnected
                 ; 0000 0036 // Noise Canceler: Off
                 ; 0000 0037 // Input Capture on Falling Edge
                 ; 0000 0038 // Timer1 Overflow Interrupt: Off
                 ; 0000 0039 // Input Capture Interrupt: Off
                 ; 0000 003A // Compare A Match Interrupt: Off
                 ; 0000 003B // Compare B Match Interrupt: Off
                 ; 0000 003C TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000078 bdef      	OUT  0x2F,R30
                 ; 0000 003D TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000079 bdee      	OUT  0x2E,R30
                 ; 0000 003E TCNT1H=0x00;
00007a bded      	OUT  0x2D,R30
                 ; 0000 003F TCNT1L=0x00;
00007b bdec      	OUT  0x2C,R30
                 ; 0000 0040 ICR1H=0x00;
00007c bde7      	OUT  0x27,R30
                 ; 0000 0041 ICR1L=0x00;
00007d bde6      	OUT  0x26,R30
                 ; 0000 0042 OCR1AH=0x00;
00007e bdeb      	OUT  0x2B,R30
                 ; 0000 0043 OCR1AL=0x00;
00007f bdea      	OUT  0x2A,R30
                 ; 0000 0044 OCR1BH=0x00;
000080 bde9      	OUT  0x29,R30
                 ; 0000 0045 OCR1BL=0x00;
000081 bde8      	OUT  0x28,R30
                 ; 0000 0046 
                 ; 0000 0047 // Timer/Counter 2 initialization
                 ; 0000 0048 // Clock source: System Clock
                 ; 0000 0049 // Clock value: Timer2 Stopped
                 ; 0000 004A // Mode: Normal top=0xFF
                 ; 0000 004B // OC2 output: Disconnected
                 ; 0000 004C ASSR=0<<AS2;
000082 bde2      	OUT  0x22,R30
                 ; 0000 004D TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
000083 bde5      	OUT  0x25,R30
                 ; 0000 004E TCNT2=0x00;
000084 bde4      	OUT  0x24,R30
                 ; 0000 004F OCR2=0x00;
000085 bde3      	OUT  0x23,R30
                 ; 0000 0050 
                 ; 0000 0051 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0052 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000086 bfe9      	OUT  0x39,R30
                 ; 0000 0053 
                 ; 0000 0054 // External Interrupt(s) initialization
                 ; 0000 0055 // INT0: Off
                 ; 0000 0056 // INT1: Off
                 ; 0000 0057 // INT2: Off
                 ; 0000 0058 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
000087 bfe5      	OUT  0x35,R30
                 ; 0000 0059 MCUCSR=(0<<ISC2);
000088 bfe4      	OUT  0x34,R30
                 ; 0000 005A 
                 ; 0000 005B // USART initialization
                 ; 0000 005C // USART disabled
                 ; 0000 005D UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000089 b9ea      	OUT  0xA,R30
                 ; 0000 005E 
                 ; 0000 005F // Analog Comparator initialization
                 ; 0000 0060 // Analog Comparator: Off
                 ; 0000 0061 // The Analog Comparator's positive input is
                 ; 0000 0062 // connected to the AIN0 pin
                 ; 0000 0063 // The Analog Comparator's negative input is
                 ; 0000 0064 // connected to the AIN1 pin
                 ; 0000 0065 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
00008a e8e0      	LDI  R30,LOW(128)
00008b b9e8      	OUT  0x8,R30
                 ; 0000 0066 SFIOR=(0<<ACME);
00008c e0e0      	LDI  R30,LOW(0)
00008d bfe0      	OUT  0x30,R30
                 ; 0000 0067 
                 ; 0000 0068 // ADC initialization
                 ; 0000 0069 // ADC disabled
                 ; 0000 006A ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
00008e b9e6      	OUT  0x6,R30
                 ; 0000 006B 
                 ; 0000 006C // SPI initialization
                 ; 0000 006D // SPI disabled
                 ; 0000 006E SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
00008f b9ed      	OUT  0xD,R30
                 ; 0000 006F 
                 ; 0000 0070 // TWI initialization
                 ; 0000 0071 // TWI disabled
                 ; 0000 0072 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
000090 bfe6      	OUT  0x36,R30
                 ; 0000 0073 
                 ; 0000 0074 // Alphanumeric LCD initialization
                 ; 0000 0075 // Connections are specified in the
                 ; 0000 0076 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0077 // RS - PORTA Bit 0
                 ; 0000 0078 // RD - PORTA Bit 1
                 ; 0000 0079 // EN - PORTA Bit 2
                 ; 0000 007A // D4 - PORTA Bit 4
                 ; 0000 007B // D5 - PORTA Bit 5
                 ; 0000 007C // D6 - PORTA Bit 6
                 ; 0000 007D // D7 - PORTA Bit 7
                 ; 0000 007E // Characters/line: 16
                 ; 0000 007F lcd_init(16);
000091 e1a0      	LDI  R26,LOW(16)
000092 940e 02c0 	CALL _lcd_init
                 ; 0000 0080 
                 ; 0000 0081 while (1)
                 _0x3:
                 ; 0000 0082       {
                 ; 0000 0083       sprintf(str, "Value=%d",x);
000094 e6e0      	LDI  R30,LOW(_str)
000095 e0f2      	LDI  R31,HIGH(_str)
000096 93fa      	ST   -Y,R31
000097 93ea      	ST   -Y,R30
                +
000098 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000099 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00009a 93fa      	ST   -Y,R31
00009b 93ea      	ST   -Y,R30
00009c 01f2      	MOVW R30,R4
00009d 940e 0353 	CALL __CWD1
00009f 940e 0360 	CALL __PUTPARD1
0000a1 e084      	LDI  R24,4
0000a2 940e 022d 	CALL _sprintf
0000a4 9628      	ADIW R28,8
                 ; 0000 0084       lcd_gotoxy(0,0);
0000a5 e0e0      	LDI  R30,LOW(0)
0000a6 93ea      	ST   -Y,R30
0000a7 e0a0      	LDI  R26,LOW(0)
0000a8 940e 0281 	CALL _lcd_gotoxy
                 ; 0000 0085       lcd_puts(str);
0000aa e6a0      	LDI  R26,LOW(_str)
0000ab e0b2      	LDI  R27,HIGH(_str)
0000ac 940e 02af 	CALL _lcd_puts
                 ; 0000 0086 
                 ; 0000 0087       if(PINB.0==0)
0000ae 99b0      	SBIC 0x16,0
0000af c007      	RJMP _0x6
                 ; 0000 0088       {
                 ; 0000 0089       x++;
0000b0 01f2      	MOVW R30,R4
0000b1 9631      	ADIW R30,1
0000b2 012f      	MOVW R4,R30
                 ; 0000 008A       delay_ms(200);
0000b3 eca8      	LDI  R26,LOW(200)
0000b4 e0b0      	LDI  R27,0
0000b5 940e 0341 	CALL _delay_ms
                 ; 0000 008B       }
                 ; 0000 008C 
                 ; 0000 008D       }
                 _0x6:
0000b7 cfdc      	RJMP _0x3
                 ; 0000 008E }
                 _0x7:
0000b8 cfff      	RJMP _0x7
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0000b9 93ba      	ST   -Y,R27
0000ba 93aa      	ST   -Y,R26
0000bb 931a      	ST   -Y,R17
0000bc 930a      	ST   -Y,R16
0000bd 81aa      	LDD  R26,Y+2
0000be 81bb      	LDD  R27,Y+2+1
0000bf 9612      	ADIW R26,2
0000c0 940e 0358 	CALL __GETW1P
0000c2 9730      	SBIW R30,0
0000c3 f159      	BREQ _0x2000010
0000c4 81aa      	LDD  R26,Y+2
0000c5 81bb      	LDD  R27,Y+2+1
0000c6 9614      	ADIW R26,4
0000c7 940e 0358 	CALL __GETW1P
0000c9 018f      	MOVW R16,R30
0000ca 9730      	SBIW R30,0
0000cb f061      	BREQ _0x2000012
                +
0000cc 3002     +CPI R16 , LOW ( 2 )
0000cd e0e0     +LDI R30 , HIGH ( 2 )
0000ce 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0000cf f098      	BRLO _0x2000013
0000d0 01f8      	MOVW R30,R16
0000d1 9731      	SBIW R30,1
0000d2 018f      	MOVW R16,R30
                +
0000d3 81aa     +LDD R26 , Y + 2
0000d4 81bb     +LDD R27 , Y + 2 + 1
0000d5 9614     +ADIW R26 , 4
0000d6 93ed     +ST X + , R30
0000d7 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0000d8 81aa      	LDD  R26,Y+2
0000d9 81bb      	LDD  R27,Y+2+1
0000da 9612      	ADIW R26,2
0000db 91ed      	LD   R30,X+
0000dc 91fd      	LD   R31,X+
0000dd 9631      	ADIW R30,1
0000de 93fe      	ST   -X,R31
0000df 93ee      	ST   -X,R30
0000e0 9731      	SBIW R30,1
0000e1 81ac      	LDD  R26,Y+4
0000e2 83a0      	STD  Z+0,R26
                 _0x2000013:
0000e3 81aa      	LDD  R26,Y+2
0000e4 81bb      	LDD  R27,Y+2+1
0000e5 940e 0358 	CALL __GETW1P
0000e7 23ff      	TST  R31
0000e8 f02a      	BRMI _0x2000014
0000e9 91ed      	LD   R30,X+
0000ea 91fd      	LD   R31,X+
0000eb 9631      	ADIW R30,1
0000ec 93fe      	ST   -X,R31
0000ed 93ee      	ST   -X,R30
                 _0x2000014:
0000ee c006      	RJMP _0x2000015
                 _0x2000010:
0000ef 81aa      	LDD  R26,Y+2
0000f0 81bb      	LDD  R27,Y+2+1
0000f1 efef      	LDI  R30,LOW(65535)
0000f2 efff      	LDI  R31,HIGH(65535)
0000f3 93ed      	ST   X+,R30
0000f4 93fc      	ST   X,R31
                 _0x2000015:
0000f5 8119      	LDD  R17,Y+1
0000f6 8108      	LDD  R16,Y+0
0000f7 9625      	ADIW R28,5
0000f8 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0000f9 93ba      	ST   -Y,R27
0000fa 93aa      	ST   -Y,R26
0000fb 9726      	SBIW R28,6
0000fc 940e 0365 	CALL __SAVELOCR6
0000fe e010      	LDI  R17,0
0000ff 85ac      	LDD  R26,Y+12
000100 85bd      	LDD  R27,Y+12+1
000101 e0e0      	LDI  R30,LOW(0)
000102 e0f0      	LDI  R31,HIGH(0)
000103 93ed      	ST   X+,R30
000104 93fc      	ST   X,R31
                 _0x2000016:
000105 89ea      	LDD  R30,Y+18
000106 89fb      	LDD  R31,Y+18+1
000107 9631      	ADIW R30,1
000108 8bea      	STD  Y+18,R30
000109 8bfb      	STD  Y+18+1,R31
00010a 9731      	SBIW R30,1
00010b 91e4      	LPM  R30,Z
00010c 2f2e      	MOV  R18,R30
00010d 30e0      	CPI  R30,0
00010e f409      	BRNE PC+2
00010f c115      	RJMP _0x2000018
000110 2fe1      	MOV  R30,R17
000111 30e0      	CPI  R30,0
000112 f439      	BRNE _0x200001C
000113 3225      	CPI  R18,37
000114 f411      	BRNE _0x200001D
000115 e011      	LDI  R17,LOW(1)
000116 c002      	RJMP _0x200001E
                 _0x200001D:
000117 940e 0307 	CALL SUBOPT_0x0
                 _0x200001E:
000119 c10a      	RJMP _0x200001B
                 _0x200001C:
00011a 30e1      	CPI  R30,LOW(0x1)
00011b f4a9      	BRNE _0x200001F
00011c 3225      	CPI  R18,37
00011d f419      	BRNE _0x2000020
00011e 940e 0307 	CALL SUBOPT_0x0
000120 c102      	RJMP _0x20000CC
                 _0x2000020:
000121 e012      	LDI  R17,LOW(2)
000122 e040      	LDI  R20,LOW(0)
000123 e000      	LDI  R16,LOW(0)
000124 322d      	CPI  R18,45
000125 f411      	BRNE _0x2000021
000126 e001      	LDI  R16,LOW(1)
000127 c0fc      	RJMP _0x200001B
                 _0x2000021:
000128 322b      	CPI  R18,43
000129 f411      	BRNE _0x2000022
00012a e24b      	LDI  R20,LOW(43)
00012b c0f8      	RJMP _0x200001B
                 _0x2000022:
00012c 3220      	CPI  R18,32
00012d f411      	BRNE _0x2000023
00012e e240      	LDI  R20,LOW(32)
00012f c0f4      	RJMP _0x200001B
                 _0x2000023:
000130 c002      	RJMP _0x2000024
                 _0x200001F:
000131 30e2      	CPI  R30,LOW(0x2)
000132 f439      	BRNE _0x2000025
                 _0x2000024:
000133 e050      	LDI  R21,LOW(0)
000134 e013      	LDI  R17,LOW(3)
000135 3320      	CPI  R18,48
000136 f411      	BRNE _0x2000026
000137 6800      	ORI  R16,LOW(128)
000138 c0eb      	RJMP _0x200001B
                 _0x2000026:
000139 c003      	RJMP _0x2000027
                 _0x2000025:
00013a 30e3      	CPI  R30,LOW(0x3)
00013b f009      	BREQ PC+2
00013c c0e7      	RJMP _0x200001B
                 _0x2000027:
00013d 3320      	CPI  R18,48
00013e f010      	BRLO _0x200002A
00013f 332a      	CPI  R18,58
000140 f008      	BRLO _0x200002B
                 _0x200002A:
000141 c007      	RJMP _0x2000029
                 _0x200002B:
000142 e0aa      	LDI  R26,LOW(10)
000143 9f5a      	MUL  R21,R26
000144 2d50      	MOV  R21,R0
000145 2fe2      	MOV  R30,R18
000146 53e0      	SUBI R30,LOW(48)
000147 0f5e      	ADD  R21,R30
000148 c0db      	RJMP _0x200001B
                 _0x2000029:
000149 2fe2      	MOV  R30,R18
00014a 36e3      	CPI  R30,LOW(0x63)
00014b f449      	BRNE _0x200002F
00014c 940e 030e 	CALL SUBOPT_0x1
00014e 89e8      	LDD  R30,Y+16
00014f 89f9      	LDD  R31,Y+16+1
000150 81a4      	LDD  R26,Z+4
000151 93aa      	ST   -Y,R26
000152 940e 0314 	CALL SUBOPT_0x2
000154 c0ce      	RJMP _0x2000030
                 _0x200002F:
000155 37e3      	CPI  R30,LOW(0x73)
000156 f441      	BRNE _0x2000032
000157 940e 030e 	CALL SUBOPT_0x1
000159 940e 031a 	CALL SUBOPT_0x3
00015b 940e 02ee 	CALL _strlen
00015d 2f1e      	MOV  R17,R30
00015e c00a      	RJMP _0x2000033
                 _0x2000032:
00015f 37e0      	CPI  R30,LOW(0x70)
000160 f461      	BRNE _0x2000035
000161 940e 030e 	CALL SUBOPT_0x1
000163 940e 031a 	CALL SUBOPT_0x3
000165 940e 02fa 	CALL _strlenf
000167 2f1e      	MOV  R17,R30
000168 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000169 6002      	ORI  R16,LOW(2)
00016a 770f      	ANDI R16,LOW(127)
00016b e030      	LDI  R19,LOW(0)
00016c c034      	RJMP _0x2000036
                 _0x2000035:
00016d 36e4      	CPI  R30,LOW(0x64)
00016e f011      	BREQ _0x2000039
00016f 36e9      	CPI  R30,LOW(0x69)
000170 f411      	BRNE _0x200003A
                 _0x2000039:
000171 6004      	ORI  R16,LOW(4)
000172 c002      	RJMP _0x200003B
                 _0x200003A:
000173 37e5      	CPI  R30,LOW(0x75)
000174 f431      	BRNE _0x200003C
                 _0x200003B:
000175 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
000176 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000177 83ee      	STD  Y+6,R30
000178 83ff      	STD  Y+6+1,R31
000179 e015      	LDI  R17,LOW(5)
00017a c00c      	RJMP _0x200003D
                 _0x200003C:
00017b 35e8      	CPI  R30,LOW(0x58)
00017c f411      	BRNE _0x200003F
00017d 6008      	ORI  R16,LOW(8)
00017e c003      	RJMP _0x2000040
                 _0x200003F:
00017f 37e8      	CPI  R30,LOW(0x78)
000180 f009      	BREQ PC+2
000181 c0a1      	RJMP _0x2000071
                 _0x2000040:
000182 e5ee      	LDI  R30,LOW(_tbl16_G100*2)
000183 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000184 83ee      	STD  Y+6,R30
000185 83ff      	STD  Y+6+1,R31
000186 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000187 ff02      	SBRS R16,2
000188 c014      	RJMP _0x2000042
000189 940e 030e 	CALL SUBOPT_0x1
00018b 940e 0324 	CALL SUBOPT_0x4
00018d 85ab      	LDD  R26,Y+11
00018e 23aa      	TST  R26
00018f f43a      	BRPL _0x2000043
000190 85ea      	LDD  R30,Y+10
000191 85fb      	LDD  R31,Y+10+1
000192 940e 034f 	CALL __ANEGW1
000194 87ea      	STD  Y+10,R30
000195 87fb      	STD  Y+10+1,R31
000196 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000197 3040      	CPI  R20,0
000198 f011      	BREQ _0x2000044
000199 5f1f      	SUBI R17,-LOW(1)
00019a c001      	RJMP _0x2000045
                 _0x2000044:
00019b 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
00019c c004      	RJMP _0x2000046
                 _0x2000042:
00019d 940e 030e 	CALL SUBOPT_0x1
00019f 940e 0324 	CALL SUBOPT_0x4
                 _0x2000046:
                 _0x2000036:
0001a1 fd00      	SBRC R16,0
0001a2 c011      	RJMP _0x2000047
                 _0x2000048:
0001a3 1715      	CP   R17,R21
0001a4 f478      	BRSH _0x200004A
0001a5 ff07      	SBRS R16,7
0001a6 c008      	RJMP _0x200004B
0001a7 ff02      	SBRS R16,2
0001a8 c004      	RJMP _0x200004C
0001a9 7f0b      	ANDI R16,LOW(251)
0001aa 2f24      	MOV  R18,R20
0001ab 5011      	SUBI R17,LOW(1)
0001ac c001      	RJMP _0x200004D
                 _0x200004C:
0001ad e320      	LDI  R18,LOW(48)
                 _0x200004D:
0001ae c001      	RJMP _0x200004E
                 _0x200004B:
0001af e220      	LDI  R18,LOW(32)
                 _0x200004E:
0001b0 940e 0307 	CALL SUBOPT_0x0
0001b2 5051      	SUBI R21,LOW(1)
0001b3 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0001b4 2f31      	MOV  R19,R17
0001b5 ff01      	SBRS R16,1
0001b6 c017      	RJMP _0x200004F
                 _0x2000050:
0001b7 3030      	CPI  R19,0
0001b8 f0a1      	BREQ _0x2000052
0001b9 ff03      	SBRS R16,3
0001ba c006      	RJMP _0x2000053
0001bb 81ee      	LDD  R30,Y+6
0001bc 81ff      	LDD  R31,Y+6+1
0001bd 9125      	LPM  R18,Z+
0001be 83ee      	STD  Y+6,R30
0001bf 83ff      	STD  Y+6+1,R31
0001c0 c005      	RJMP _0x2000054
                 _0x2000053:
0001c1 81ae      	LDD  R26,Y+6
0001c2 81bf      	LDD  R27,Y+6+1
0001c3 912d      	LD   R18,X+
0001c4 83ae      	STD  Y+6,R26
0001c5 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0001c6 940e 0307 	CALL SUBOPT_0x0
0001c8 3050      	CPI  R21,0
0001c9 f009      	BREQ _0x2000055
0001ca 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0001cb 5031      	SUBI R19,LOW(1)
0001cc cfea      	RJMP _0x2000050
                 _0x2000052:
0001cd c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0001ce e320      	LDI  R18,LOW(48)
0001cf 81ee      	LDD  R30,Y+6
0001d0 81ff      	LDD  R31,Y+6+1
0001d1 940e 035c 	CALL __GETW1PF
0001d3 87e8      	STD  Y+8,R30
0001d4 87f9      	STD  Y+8+1,R31
0001d5 81ee      	LDD  R30,Y+6
0001d6 81ff      	LDD  R31,Y+6+1
0001d7 9632      	ADIW R30,2
0001d8 83ee      	STD  Y+6,R30
0001d9 83ff      	STD  Y+6+1,R31
                 _0x200005A:
0001da 85e8      	LDD  R30,Y+8
0001db 85f9      	LDD  R31,Y+8+1
0001dc 85aa      	LDD  R26,Y+10
0001dd 85bb      	LDD  R27,Y+10+1
0001de 17ae      	CP   R26,R30
0001df 07bf      	CPC  R27,R31
0001e0 f050      	BRLO _0x200005C
0001e1 5f2f      	SUBI R18,-LOW(1)
0001e2 85a8      	LDD  R26,Y+8
0001e3 85b9      	LDD  R27,Y+8+1
0001e4 85ea      	LDD  R30,Y+10
0001e5 85fb      	LDD  R31,Y+10+1
0001e6 1bea      	SUB  R30,R26
0001e7 0bfb      	SBC  R31,R27
0001e8 87ea      	STD  Y+10,R30
0001e9 87fb      	STD  Y+10+1,R31
0001ea cfef      	RJMP _0x200005A
                 _0x200005C:
0001eb 332a      	CPI  R18,58
0001ec f028      	BRLO _0x200005D
0001ed ff03      	SBRS R16,3
0001ee c002      	RJMP _0x200005E
0001ef 5f29      	SUBI R18,-LOW(7)
0001f0 c001      	RJMP _0x200005F
                 _0x200005E:
0001f1 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0001f2 fd04      	SBRC R16,4
0001f3 c01a      	RJMP _0x2000061
0001f4 3321      	CPI  R18,49
0001f5 f420      	BRSH _0x2000063
0001f6 85a8      	LDD  R26,Y+8
0001f7 85b9      	LDD  R27,Y+8+1
0001f8 9711      	SBIW R26,1
0001f9 f409      	BRNE _0x2000062
                 _0x2000063:
0001fa c009      	RJMP _0x20000CD
                 _0x2000062:
0001fb 1753      	CP   R21,R19
0001fc f010      	BRLO _0x2000067
0001fd ff00      	SBRS R16,0
0001fe c001      	RJMP _0x2000068
                 _0x2000067:
0001ff c013      	RJMP _0x2000066
                 _0x2000068:
000200 e220      	LDI  R18,LOW(32)
000201 ff07      	SBRS R16,7
000202 c00b      	RJMP _0x2000069
000203 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
000204 6100      	ORI  R16,LOW(16)
000205 ff02      	SBRS R16,2
000206 c007      	RJMP _0x200006A
000207 7f0b      	ANDI R16,LOW(251)
000208 934a      	ST   -Y,R20
000209 940e 0314 	CALL SUBOPT_0x2
00020b 3050      	CPI  R21,0
00020c f009      	BREQ _0x200006B
00020d 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
00020e 940e 0307 	CALL SUBOPT_0x0
000210 3050      	CPI  R21,0
000211 f009      	BREQ _0x200006C
000212 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000213 5031      	SUBI R19,LOW(1)
000214 85a8      	LDD  R26,Y+8
000215 85b9      	LDD  R27,Y+8+1
000216 9712      	SBIW R26,2
000217 f008      	BRLO _0x2000059
000218 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000219 ff00      	SBRS R16,0
00021a c008      	RJMP _0x200006D
                 _0x200006E:
00021b 3050      	CPI  R21,0
00021c f031      	BREQ _0x2000070
00021d 5051      	SUBI R21,LOW(1)
00021e e2e0      	LDI  R30,LOW(32)
00021f 93ea      	ST   -Y,R30
000220 940e 0314 	CALL SUBOPT_0x2
000222 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
000223 e010      	LDI  R17,LOW(0)
                 _0x200001B:
000224 cee0      	RJMP _0x2000016
                 _0x2000018:
000225 85ac      	LDD  R26,Y+12
000226 85bd      	LDD  R27,Y+12+1
000227 940e 0358 	CALL __GETW1P
000229 940e 036c 	CALL __LOADLOCR6
00022b 9664      	ADIW R28,20
00022c 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00022d 92ff      	PUSH R15
00022e 2ef8      	MOV  R15,R24
00022f 9726      	SBIW R28,6
000230 940e 0367 	CALL __SAVELOCR4
000232 940e 032c 	CALL SUBOPT_0x5
000234 9730      	SBIW R30,0
000235 f419      	BRNE _0x2000072
000236 efef      	LDI  R30,LOW(65535)
000237 efff      	LDI  R31,HIGH(65535)
000238 c023      	RJMP _0x2080002
                 _0x2000072:
000239 01de      	MOVW R26,R28
00023a 9616      	ADIW R26,6
00023b 940e 034b 	CALL __ADDW2R15
00023d 018d      	MOVW R16,R26
00023e 940e 032c 	CALL SUBOPT_0x5
000240 83ee      	STD  Y+6,R30
000241 83ff      	STD  Y+6+1,R31
000242 e0e0      	LDI  R30,LOW(0)
000243 87e8      	STD  Y+8,R30
000244 87e9      	STD  Y+8+1,R30
000245 01de      	MOVW R26,R28
000246 961a      	ADIW R26,10
000247 940e 034b 	CALL __ADDW2R15
000249 940e 0358 	CALL __GETW1P
00024b 93fa      	ST   -Y,R31
00024c 93ea      	ST   -Y,R30
00024d 931a      	ST   -Y,R17
00024e 930a      	ST   -Y,R16
00024f ebe9      	LDI  R30,LOW(_put_buff_G100)
000250 e0f0      	LDI  R31,HIGH(_put_buff_G100)
000251 93fa      	ST   -Y,R31
000252 93ea      	ST   -Y,R30
000253 01de      	MOVW R26,R28
000254 961a      	ADIW R26,10
000255 dea3      	RCALL __print_G100
000256 019f      	MOVW R18,R30
000257 81ae      	LDD  R26,Y+6
000258 81bf      	LDD  R27,Y+6+1
000259 e0e0      	LDI  R30,LOW(0)
00025a 93ec      	ST   X,R30
00025b 01f9      	MOVW R30,R18
                 _0x2080002:
00025c 940e 036e 	CALL __LOADLOCR4
00025e 962a      	ADIW R28,10
00025f 90ff      	POP  R15
000260 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
000261 93aa      	ST   -Y,R26
000262 b3eb      	IN   R30,0x1B
000263 70ef      	ANDI R30,LOW(0xF)
000264 2fae      	MOV  R26,R30
000265 81e8      	LD   R30,Y
000266 7fe0      	ANDI R30,LOW(0xF0)
000267 2bea      	OR   R30,R26
000268 bbeb      	OUT  0x1B,R30
                +
000269 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00026a 958a     +DEC R24
00026b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00026c 9ada      	SBI  0x1B,2
                +
00026d e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00026e 958a     +DEC R24
00026f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000270 98da      	CBI  0x1B,2
                +
000271 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000272 958a     +DEC R24
000273 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000274 c077      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000275 93aa      	ST   -Y,R26
000276 81a8      	LD   R26,Y
000277 dfe9      	RCALL __lcd_write_nibble_G101
000278 81e8          ld    r30,y
000279 95e2          swap  r30
00027a 83e8          st    y,r30
00027b 81a8      	LD   R26,Y
00027c dfe4      	RCALL __lcd_write_nibble_G101
                +
00027d e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
00027e 958a     +DEC R24
00027f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000280 c06b      	RJMP _0x2080001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000281 93aa      	ST   -Y,R26
000282 81e8      	LD   R30,Y
000283 e0f0      	LDI  R31,0
000284 58ef      	SUBI R30,LOW(-__base_y_G101)
000285 4ffd      	SBCI R31,HIGH(-__base_y_G101)
000286 81e0      	LD   R30,Z
000287 81a9      	LDD  R26,Y+1
000288 0fae      	ADD  R26,R30
000289 dfeb      	RCALL __lcd_write_data
00028a 8079      	LDD  R7,Y+1
00028b 8068      	LDD  R6,Y+0
00028c 9622      	ADIW R28,2
00028d 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00028e e0a2      	LDI  R26,LOW(2)
00028f 940e 0333 	CALL SUBOPT_0x6
000291 e0ac      	LDI  R26,LOW(12)
000292 dfe2      	RCALL __lcd_write_data
000293 e0a1      	LDI  R26,LOW(1)
000294 940e 0333 	CALL SUBOPT_0x6
000296 e0e0      	LDI  R30,LOW(0)
000297 2e6e      	MOV  R6,R30
000298 2e7e      	MOV  R7,R30
000299 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00029a 93aa      	ST   -Y,R26
00029b 81a8      	LD   R26,Y
00029c 30aa      	CPI  R26,LOW(0xA)
00029d f011      	BREQ _0x2020005
00029e 1479      	CP   R7,R9
00029f f048      	BRLO _0x2020004
                 _0x2020005:
0002a0 e0e0      	LDI  R30,LOW(0)
0002a1 93ea      	ST   -Y,R30
0002a2 9463      	INC  R6
0002a3 2da6      	MOV  R26,R6
0002a4 dfdc      	RCALL _lcd_gotoxy
0002a5 81a8      	LD   R26,Y
0002a6 30aa      	CPI  R26,LOW(0xA)
0002a7 f409      	BRNE _0x2020007
0002a8 c043      	RJMP _0x2080001
                 _0x2020007:
                 _0x2020004:
0002a9 9473      	INC  R7
0002aa 9ad8      	SBI  0x1B,0
0002ab 81a8      	LD   R26,Y
0002ac dfc8      	RCALL __lcd_write_data
0002ad 98d8      	CBI  0x1B,0
0002ae c03d      	RJMP _0x2080001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0002af 93ba      	ST   -Y,R27
0002b0 93aa      	ST   -Y,R26
0002b1 931a      	ST   -Y,R17
                 _0x2020008:
0002b2 81a9      	LDD  R26,Y+1
0002b3 81ba      	LDD  R27,Y+1+1
0002b4 91ed      	LD   R30,X+
0002b5 83a9      	STD  Y+1,R26
0002b6 83ba      	STD  Y+1+1,R27
0002b7 2f1e      	MOV  R17,R30
0002b8 30e0      	CPI  R30,0
0002b9 f019      	BREQ _0x202000A
0002ba 2fa1      	MOV  R26,R17
0002bb dfde      	RCALL _lcd_putchar
0002bc cff5      	RJMP _0x2020008
                 _0x202000A:
0002bd 8118      	LDD  R17,Y+0
0002be 9623      	ADIW R28,3
0002bf 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0002c0 93aa      	ST   -Y,R26
0002c1 b3ea      	IN   R30,0x1A
0002c2 6fe0      	ORI  R30,LOW(0xF0)
0002c3 bbea      	OUT  0x1A,R30
0002c4 9ad2      	SBI  0x1A,2
0002c5 9ad0      	SBI  0x1A,0
0002c6 9ad1      	SBI  0x1A,1
0002c7 98da      	CBI  0x1B,2
0002c8 98d8      	CBI  0x1B,0
0002c9 98d9      	CBI  0x1B,1
0002ca 8098      	LDD  R9,Y+0
0002cb 81e8      	LD   R30,Y
0002cc 58e0      	SUBI R30,-LOW(128)
                +
0002cd 93e0 0273+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
0002cf 81e8      	LD   R30,Y
0002d0 54e0      	SUBI R30,-LOW(192)
                +
0002d1 93e0 0274+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
0002d3 e1a4      	LDI  R26,LOW(20)
0002d4 e0b0      	LDI  R27,0
0002d5 940e 0341 	CALL _delay_ms
0002d7 940e 0339 	CALL SUBOPT_0x7
0002d9 940e 0339 	CALL SUBOPT_0x7
0002db 940e 0339 	CALL SUBOPT_0x7
0002dd e2a0      	LDI  R26,LOW(32)
0002de df82      	RCALL __lcd_write_nibble_G101
                +
0002df ec88     +LDI R24 , LOW ( 200 )
0002e0 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0002e1 9701     +SBIW R24 , 1
0002e2 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0002e3 e2a8      	LDI  R26,LOW(40)
0002e4 df90      	RCALL __lcd_write_data
0002e5 e0a4      	LDI  R26,LOW(4)
0002e6 df8e      	RCALL __lcd_write_data
0002e7 e8a5      	LDI  R26,LOW(133)
0002e8 df8c      	RCALL __lcd_write_data
0002e9 e0a6      	LDI  R26,LOW(6)
0002ea df8a      	RCALL __lcd_write_data
0002eb dfa2      	RCALL _lcd_clear
                 _0x2080001:
0002ec 9621      	ADIW R28,1
0002ed 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002ee 93ba      	ST   -Y,R27
0002ef 93aa      	ST   -Y,R26
0002f0 91a9          ld   r26,y+
0002f1 91b9          ld   r27,y+
0002f2 27ee          clr  r30
0002f3 27ff          clr  r31
                 strlen0:
0002f4 916d          ld   r22,x+
0002f5 2366          tst  r22
0002f6 f011          breq strlen1
0002f7 9631          adiw r30,1
0002f8 cffb          rjmp strlen0
                 strlen1:
0002f9 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002fa 93ba      	ST   -Y,R27
0002fb 93aa      	ST   -Y,R26
0002fc 27aa          clr  r26
0002fd 27bb          clr  r27
0002fe 91e9          ld   r30,y+
0002ff 91f9          ld   r31,y+
                 strlenf0:
000300 9005      	lpm  r0,z+
000301 2000          tst  r0
000302 f011          breq strlenf1
000303 9611          adiw r26,1
000304 cffb          rjmp strlenf0
                 strlenf1:
000305 01fd          movw r30,r26
000306 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _str:
000260           	.BYTE 0x11
                 __base_y_G101:
000271           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x0:
000307 932a      	ST   -Y,R18
000308 85ad      	LDD  R26,Y+13
000309 85be      	LDD  R27,Y+13+1
00030a 85ef      	LDD  R30,Y+15
00030b 89f8      	LDD  R31,Y+15+1
00030c 9509      	ICALL
00030d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
00030e 89e8      	LDD  R30,Y+16
00030f 89f9      	LDD  R31,Y+16+1
000310 9734      	SBIW R30,4
000311 8be8      	STD  Y+16,R30
000312 8bf9      	STD  Y+16+1,R31
000313 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000314 85ad      	LDD  R26,Y+13
000315 85be      	LDD  R27,Y+13+1
000316 85ef      	LDD  R30,Y+15
000317 89f8      	LDD  R31,Y+15+1
000318 9509      	ICALL
000319 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
00031a 89a8      	LDD  R26,Y+16
00031b 89b9      	LDD  R27,Y+16+1
00031c 9614      	ADIW R26,4
00031d 940e 0358 	CALL __GETW1P
00031f 83ee      	STD  Y+6,R30
000320 83ff      	STD  Y+6+1,R31
000321 81ae      	LDD  R26,Y+6
000322 81bf      	LDD  R27,Y+6+1
000323 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
000324 89a8      	LDD  R26,Y+16
000325 89b9      	LDD  R27,Y+16+1
000326 9614      	ADIW R26,4
000327 940e 0358 	CALL __GETW1P
000329 87ea      	STD  Y+10,R30
00032a 87fb      	STD  Y+10+1,R31
00032b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
00032c 01de      	MOVW R26,R28
00032d 961c      	ADIW R26,12
00032e 940e 034b 	CALL __ADDW2R15
000330 940e 0358 	CALL __GETW1P
000332 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000333 940e 0275 	CALL __lcd_write_data
000335 e0a3      	LDI  R26,LOW(3)
000336 e0b0      	LDI  R27,0
000337 940c 0341 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x7:
000339 e3a0      	LDI  R26,LOW(48)
00033a 940e 0261 	CALL __lcd_write_nibble_G101
                +
00033c ec88     +LDI R24 , LOW ( 200 )
00033d e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00033e 9701     +SBIW R24 , 1
00033f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000340 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000341 9610      	adiw r26,0
000342 f039      	breq __delay_ms1
                 __delay_ms0:
000343 95a8      	wdr
                +
000344 ed80     +LDI R24 , LOW ( 0x7D0 )
000345 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000346 9701     +SBIW R24 , 1
000347 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000348 9711      	sbiw r26,1
000349 f7c9      	brne __delay_ms0
                 __delay_ms1:
00034a 9508      	ret
                 
                 __ADDW2R15:
00034b 2400      	CLR  R0
00034c 0daf      	ADD  R26,R15
00034d 1db0      	ADC  R27,R0
00034e 9508      	RET
                 
                 __ANEGW1:
00034f 95f1      	NEG  R31
000350 95e1      	NEG  R30
000351 40f0      	SBCI R31,0
000352 9508      	RET
                 
                 __CWD1:
000353 2f6f      	MOV  R22,R31
000354 0f66      	ADD  R22,R22
000355 0b66      	SBC  R22,R22
000356 2f76      	MOV  R23,R22
000357 9508      	RET
                 
                 __GETW1P:
000358 91ed      	LD   R30,X+
000359 91fc      	LD   R31,X
00035a 9711      	SBIW R26,1
00035b 9508      	RET
                 
                 __GETW1PF:
00035c 9005      	LPM  R0,Z+
00035d 91f4      	LPM  R31,Z
00035e 2de0      	MOV  R30,R0
00035f 9508      	RET
                 
                 __PUTPARD1:
000360 937a      	ST   -Y,R23
000361 936a      	ST   -Y,R22
000362 93fa      	ST   -Y,R31
000363 93ea      	ST   -Y,R30
000364 9508      	RET
                 
                 __SAVELOCR6:
000365 935a      	ST   -Y,R21
                 __SAVELOCR5:
000366 934a      	ST   -Y,R20
                 __SAVELOCR4:
000367 933a      	ST   -Y,R19
                 __SAVELOCR3:
000368 932a      	ST   -Y,R18
                 __SAVELOCR2:
000369 931a      	ST   -Y,R17
00036a 930a      	ST   -Y,R16
00036b 9508      	RET
                 
                 __LOADLOCR6:
00036c 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00036d 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00036e 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00036f 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000370 8119      	LDD  R17,Y+1
000371 8108      	LD   R16,Y
000372 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   3 r5 :   0 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:  11 r23:   2 
r24:  23 r25:   5 r26:  98 r27:  38 r28:  14 r29:   1 r30: 189 r31:  58 
x  :  23 y  : 166 z  :  15 
Registers used: 26 out of 35 (74.3%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   4 
adiw  :  25 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  53 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   7 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  33 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  23 ld    :  25 ldd   :  77 ldi   :  92 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  19 movw  :  17 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  42 pop   :   1 push  :   1 rcall :  14 ret   :  25 
reti  :   0 rjmp  :  60 rol   :   0 ror   :   0 sbc   :   2 sbci  :   2 
sbi   :   5 sbic  :   1 sbis  :   0 sbiw  :  19 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  59 std   :  31 sts   :   2 sub   :   1 subi  :  16 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 53 out of 116 (45.7%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0006e6   1728     38   1766   32768   5.4%
[.dseg] 0x000060 0x000275      0     21     21    2048   1.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 6 warnings
